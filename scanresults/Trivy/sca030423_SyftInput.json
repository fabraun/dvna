{
  "SchemaVersion": 2,
  "ArtifactName": "GitHub\\dvna\\scanresults\\Syft_Grype\\sbom_030423.json",
  "ArtifactType": "cyclonedx",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "Node.js",
      "Class": "lang-pkgs",
      "Type": "node-pkg",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2020-7689",
          "PkgName": "bcrypt",
          "InstalledVersion": "1.0.3",
          "FixedVersion": "5.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-7689",
          "Ref": "pkg:npm/bcrypt@1.0.3?package-id=2b2a61c698a6b42b",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Integer Overflow or Wraparound and Use of a Broken or Risky Cryptographic Algorithm in bcrypt",
          "Description": "Data is truncated wrong when its length is greater than 255 bytes.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-326"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "V3Score": 5.9
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "V2Score": 4.3,
              "V3Score": 7.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-5wg4-74h6-q47v",
            "https://github.com/kelektiv/node.bcrypt.js/issues/776",
            "https://github.com/kelektiv/node.bcrypt.js/pull/806",
            "https://github.com/kelektiv/node.bcrypt.js/pull/807",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-7689",
            "https://snyk.io/vuln/SNYK-JS-BCRYPT-572911"
          ],
          "PublishedDate": "2020-07-01T14:15:00Z",
          "LastModifiedDate": "2021-07-21T11:39:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-24434",
          "PkgName": "dicer",
          "InstalledVersion": "0.2.5",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-24434",
          "Ref": "pkg:npm/dicer@0.2.5?package-id=6f235d75ba000afe",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Crash in HeaderParser in dicer",
          "Description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
          "Severity": "HIGH",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 5,
              "V3Score": 7.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-wm7h-9275-46v2",
            "https://github.com/mscdex/busboy/issues/250",
            "https://github.com/mscdex/dicer/pull/22",
            "https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-24434",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2838865",
            "https://snyk.io/vuln/SNYK-JS-DICER-2311764"
          ],
          "PublishedDate": "2022-05-20T20:15:00Z",
          "LastModifiedDate": "2022-06-07T02:04:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-29078",
          "PkgName": "ejs",
          "InstalledVersion": "2.7.4",
          "FixedVersion": "3.1.7",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-29078",
          "Ref": "pkg:npm/ejs@2.7.4?package-id=e6758ad53b30bea6",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "ejs: server-side template injection in outputFunctionName",
          "Description": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-74"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-29078",
            "https://eslam.io/posts/ejs-server-side-template-injection-rce/",
            "https://github.com/advisories/GHSA-phwq-j96m-2c2q",
            "https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf",
            "https://github.com/mde/ejs/releases",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-29078",
            "https://security.netapp.com/advisory/ntap-20220804-0001/"
          ],
          "PublishedDate": "2022-04-25T15:15:00Z",
          "LastModifiedDate": "2022-11-09T21:29:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-7699",
          "PkgName": "express-fileupload",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "1.1.9",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-7699",
          "Ref": "pkg:npm/express-fileupload@0.4.0?package-id=a995884f160833c5",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Prototype Pollution in express-fileupload",
          "Description": "This affects the package express-fileupload before 1.1.8. If the parseNested option is enabled, sending a corrupt HTTP request can lead to denial of service or arbitrary code execution.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-1321"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-9wcg-jrwf-8gg7",
            "https://github.com/richardgirges/express-fileupload/commit/db495357d7557ceb5c034de91a7a574bd12f9b9f",
            "https://github.com/richardgirges/express-fileupload/issues/236",
            "https://github.com/richardgirges/express-fileupload/pull/237",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-7699",
            "https://security.netapp.com/advisory/ntap-20200821-0003/",
            "https://snyk.io/vuln/SNYK-JS-EXPRESSFILEUPLOAD-595969"
          ],
          "PublishedDate": "2020-07-30T09:15:00Z",
          "LastModifiedDate": "2022-12-02T19:56:00Z"
        },
        {
          "VulnerabilityID": "GHSA-q3w9-g74q-vp5f",
          "PkgName": "express-fileupload",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "1.1.6-alpha.6, 1.1.6-alpha.6, 1.1.6-alpha.6, 1.1.6-alpha.6, 1.1.6-alpha.6",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-q3w9-g74q-vp5f",
          "Ref": "pkg:npm/express-fileupload@0.4.0?package-id=a995884f160833c5",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Denial of Service in express-fileupload",
          "Description": "Versions of `express-fileupload` prior to 1.1.6-alpha.6 are vulnerable to Denial of Service. The package causes server responses to be delayed (up to 30s in internal testing) if the request contains a large `filename` of `.` characters.\n\n\n\n\n## Recommendation\n\nUpgrade to version 1.1.6-alpha.6 or later.",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-q3w9-g74q-vp5f",
            "https://www.npmjs.com/advisories/1216"
          ]
        },
        {
          "VulnerabilityID": "CVE-2017-1001002",
          "PkgName": "mathjs",
          "InstalledVersion": "3.10.1",
          "FixedVersion": "3.17.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-1001002",
          "Ref": "pkg:npm/mathjs@3.10.1?package-id=d33521be42423da6",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Arbitrary Code Execution in mathjs",
          "Description": "math.js before 3.17.0 had an arbitrary code execution in the JavaScript engine. Creating a typed function with JavaScript code in the name could result arbitrary execution.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-94"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-vx5c-87qx-cv6c",
            "https://github.com/josdejong/mathjs/blob/master/HISTORY.md#2017-11-18-version-3170",
            "https://github.com/josdejong/mathjs/commit/8d2d48d81b3c233fb64eb2ec1d7a9e1cf6a55a90",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-1001002",
            "https://www.npmjs.com/advisories/552"
          ],
          "PublishedDate": "2017-11-27T14:29:00Z",
          "LastModifiedDate": "2019-10-09T23:21:00Z"
        },
        {
          "VulnerabilityID": "CVE-2017-1001003",
          "PkgName": "mathjs",
          "InstalledVersion": "3.10.1",
          "FixedVersion": "3.17.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-1001003",
          "Ref": "pkg:npm/mathjs@3.10.1?package-id=d33521be42423da6",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Arbitrary Code Execution in mathjs",
          "Description": "math.js before 3.17.0 had an issue where private properties such as a constructor could be replaced by using unicode characters when creating an object.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-20"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-pv8x-p9hq-j328",
            "https://github.com/josdejong/mathjs/blob/master/HISTORY.md#2017-11-18-version-3170",
            "https://github.com/josdejong/mathjs/commit/a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-1001003",
            "https://www.npmjs.com/advisories/551"
          ],
          "PublishedDate": "2017-11-27T14:29:00Z",
          "LastModifiedDate": "2019-10-09T23:21:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-7743",
          "PkgName": "mathjs",
          "InstalledVersion": "3.10.1",
          "FixedVersion": "7.5.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-7743",
          "Ref": "pkg:npm/mathjs@3.10.1?package-id=d33521be42423da6",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "mathjs: prototype pollution via the deepExtend function that runs upon configuration updates",
          "Description": "The package mathjs before 7.5.1 are vulnerable to Prototype Pollution via the deepExtend function that runs upon configuration updates.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-915"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 7.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V2Score": 7.5,
              "V3Score": 7.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 7.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-7743",
            "https://github.com/advisories/GHSA-x2fc-mxcx-w4mf",
            "https://github.com/josdejong/mathjs/blob/develop/HISTORY.md#2020-10-10-version-751",
            "https://github.com/josdejong/mathjs/blob/develop/src/utils/object.js%23L82",
            "https://github.com/josdejong/mathjs/commit/ecb80514e80bce4e6ec7e71db8ff79954f07c57e",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-7743",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1017113",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1017112",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1017111",
            "https://snyk.io/vuln/SNYK-JS-MATHJS-1016401",
            "https://www.npmjs.com/package/mathjs"
          ],
          "PublishedDate": "2020-10-13T10:15:00Z",
          "LastModifiedDate": "2020-10-29T20:14:00Z"
        },
        {
          "VulnerabilityID": "CVE-2017-5941",
          "PkgName": "node-serialize",
          "InstalledVersion": "0.0.4",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-5941",
          "Ref": "pkg:npm/node-serialize@0.0.4?package-id=eab4a40d7fa8a326",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Code Execution through IIFE in node-serialize",
          "Description": "An issue was discovered in the node-serialize package 0.0.4 for Node.js. Untrusted data passed into the unserialize() function can be exploited to achieve arbitrary code execution by passing a JavaScript Object with an Immediately Invoked Function Expression (IIFE).",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-502"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            }
          },
          "References": [
            "http://packetstormsecurity.com/files/161356/Node.JS-Remote-Code-Execution.html",
            "http://packetstormsecurity.com/files/163222/Node.JS-Remote-Code-Execution.html",
            "http://www.securityfocus.com/bid/96225",
            "https://github.com/advisories/GHSA-q4v7-4rhw-9hqm",
            "https://github.com/luin/serialize/issues/4",
            "https://nodesecurity.io/advisories/311",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-5941",
            "https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/",
            "https://www.npmjs.com/advisories/311"
          ],
          "PublishedDate": "2017-02-09T19:59:00Z",
          "LastModifiedDate": "2021-06-22T21:15:00Z"
        },
        {
          "VulnerabilityID": "NSWG-ECO-311",
          "PkgName": "node-serialize",
          "InstalledVersion": "0.0.4",
          "FixedVersion": "\u003c0.0.0",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "Ref": "pkg:npm/node-serialize@0.0.4?package-id=eab4a40d7fa8a326",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Code Execution through IIFE",
          "Description": "node-serialize is a module for serializing an object or function into JSON.\n\nnode-serialize can be abused to execute arbitrary code via a [immediately invoked function expression](https://en.wikipedia.org/wiki/Immediately-invoked_function_expression) (IIFE) if untrusted user input is passed into `unserialize()`",
          "Severity": "CRITICAL",
          "References": [
            "https://github.com/luin/serialize/issues/4",
            "https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-25896",
          "PkgName": "passport",
          "InstalledVersion": "0.4.1",
          "FixedVersion": "0.6.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-25896",
          "Ref": "pkg:npm/passport@0.4.1?package-id=cefc6511e63f5ea5",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "passport: incorrect session regeneration",
          "Description": "This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-384"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "V2Score": 5.8,
              "V3Score": 4.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "V3Score": 4.8
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-25896",
            "https://github.com/advisories/GHSA-v923-w3x8-wh69",
            "https://github.com/jaredhanson/passport/commit/7e9b9cf4d7be02428e963fc729496a45baeea608",
            "https://github.com/jaredhanson/passport/pull/900",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-25896",
            "https://snyk.io/vuln/SNYK-JS-PASSPORT-2840631"
          ],
          "PublishedDate": "2022-07-01T20:15:00Z",
          "LastModifiedDate": "2022-07-13T16:55:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-28155",
          "PkgName": "request",
          "InstalledVersion": "2.88.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-28155",
          "Ref": "pkg:npm/request@2.88.2?package-id=9ad88831998c9a5",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "** UNSUPPORTED WHEN ASSIGNED ** The Request package through 2.88.1 for ...",
          "Description": "** UNSUPPORTED WHEN ASSIGNED ** The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-918"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            }
          },
          "References": [
            "https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf",
            "https://github.com/advisories/GHSA-p8p7-x288-28g6",
            "https://github.com/request/request/issues/3442",
            "https://github.com/request/request/pull/3444",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-28155"
          ],
          "PublishedDate": "2023-03-16T15:15:00Z",
          "LastModifiedDate": "2023-03-22T19:32:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-22578",
          "PkgName": "sequelize",
          "InstalledVersion": "4.44.4",
          "FixedVersion": "6.29.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-22578",
          "Ref": "pkg:npm/sequelize@4.44.4?package-id=bfb61c8c00833d79",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Sequelize - Default support for “raw attributes” when using parentheses",
          "Description": "Due to improper artibute filtering in the sequalize js library, can a attacker peform SQL injections.",
          "Severity": "CRITICAL",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "V3Score": 10
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://csirt.divd.nl/CVE-2023-22578",
            "https://csirt.divd.nl/DIVD-2022-00020/",
            "https://github.com/advisories/GHSA-f598-mfpv-gmfx",
            "https://github.com/sequelize/sequelize/discussions/15694",
            "https://github.com/sequelize/sequelize/pull/15710",
            "https://github.com/sequelize/sequelize/releases/tag/v6.29.0",
            "https://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20",
            "https://github.com/sequelize/sequelize/security/advisories/GHSA-f598-mfpv-gmfx",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-22578"
          ],
          "PublishedDate": "2023-02-16T15:15:00Z",
          "LastModifiedDate": "2023-03-03T19:23:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-22579",
          "PkgName": "sequelize",
          "InstalledVersion": "4.44.4",
          "FixedVersion": "6.28.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-22579",
          "Ref": "pkg:npm/sequelize@4.44.4?package-id=bfb61c8c00833d79",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Unsafe fall-through in getWhereConditions",
          "Description": "Due to improper parameter filtering in the sequalize js library, can a attacker peform injection.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-843"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
              "V3Score": 9.9
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 8.8
            }
          },
          "References": [
            "https://csirt.divd.nl/CVE-2023-22579",
            "https://csirt.divd.nl/DIVD-2022-00020/",
            "https://github.com/advisories/GHSA-vqfx-gj96-3w95",
            "https://github.com/sequelize/sequelize/discussions/15698",
            "https://github.com/sequelize/sequelize/pull/15375",
            "https://github.com/sequelize/sequelize/pull/15699",
            "https://github.com/sequelize/sequelize/releases/tag/v6.28.1",
            "https://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20",
            "https://github.com/sequelize/sequelize/security/advisories/GHSA-vqfx-gj96-3w95",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-22579"
          ],
          "PublishedDate": "2023-02-16T15:15:00Z",
          "LastModifiedDate": "2023-02-24T19:50:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-25813",
          "PkgName": "sequelize",
          "InstalledVersion": "4.44.4",
          "FixedVersion": "6.19.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-25813",
          "Ref": "pkg:npm/sequelize@4.44.4?package-id=bfb61c8c00833d79",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Sequelize vulnerable to SQL Injection via replacements",
          "Description": "Sequelize is a Node.js ORM tool. In versions prior to 6.19.1 a SQL injection exploit exists related to replacements. Parameters which are passed through replacements are not properly escaped which can lead to arbitrary SQL injection depending on the specific queries in use. The issue has been fixed in Sequelize 6.19.1. Users are advised to upgrade. Users unable to upgrade should not use the `replacements` and the `where` option in the same query.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-89"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "V3Score": 10
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-wrh9-cjv3-2hpw",
            "https://github.com/sequelize/sequelize/commit/ccaa3996047fe00048d5993ab2dd43ebadd4f78b",
            "https://github.com/sequelize/sequelize/issues/14519",
            "https://github.com/sequelize/sequelize/releases/tag/v6.19.1",
            "https://github.com/sequelize/sequelize/security/advisories/GHSA-wrh9-cjv3-2hpw",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-25813",
            "https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-2932027"
          ],
          "PublishedDate": "2023-02-22T19:15:00Z",
          "LastModifiedDate": "2023-03-03T02:04:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-22580",
          "PkgName": "sequelize",
          "InstalledVersion": "4.44.4",
          "FixedVersion": "6.28.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-22580",
          "Ref": "pkg:npm/sequelize@4.44.4?package-id=bfb61c8c00833d79",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Sequelize information disclosure vulnerability",
          "Description": "Due to improper input filtering in the sequalize js library, can malicious queries lead to sensitive information disclosure.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-200"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 5.3
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://csirt.divd.nl/CVE-2023-22580",
            "https://csirt.divd.nl/DIVD-2022-00020/",
            "https://github.com/advisories/GHSA-8c25-f3mj-v6h8",
            "https://github.com/sequelize/sequelize/pull/15375",
            "https://github.com/sequelize/sequelize/pull/15699",
            "https://github.com/sequelize/sequelize/releases/tag/v6.28.1",
            "https://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-22580"
          ],
          "PublishedDate": "2023-02-16T15:15:00Z",
          "LastModifiedDate": "2023-02-24T19:52:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-32803",
          "PkgName": "tar",
          "InstalledVersion": "2.2.2",
          "FixedVersion": "6.1.2, 5.0.7, 4.4.15, 3.2.3",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-32803",
          "Ref": "pkg:npm/tar@2.2.2?package-id=a644fd4f575173c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-tar: Insufficient symlink protection allowing arbitrary file creation and overwrite",
          "Description": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-59"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V2Score": 5.8,
              "V3Score": 8.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-32803",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
            "https://errata.almalinux.org/8/ALSA-2021-3666.html",
            "https://github.com/advisories/GHSA-r628-mhmh-qjhw",
            "https://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356",
            "https://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571",
            "https://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349",
            "https://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
            "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
            "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw",
            "https://linux.oracle.com/cve/CVE-2021-32803.html",
            "https://linux.oracle.com/errata/ELSA-2021-3666.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-32803",
            "https://www.npmjs.com/advisories/1771",
            "https://www.npmjs.com/package/tar",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-08-03T19:15:00Z",
          "LastModifiedDate": "2022-07-02T18:28:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-32804",
          "PkgName": "tar",
          "InstalledVersion": "2.2.2",
          "FixedVersion": "6.1.1, 5.0.6, 4.4.14, 3.2.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-32804",
          "Ref": "pkg:npm/tar@2.2.2?package-id=a644fd4f575173c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-tar: Insufficient absolute path sanitization allowing arbitrary file creation and overwrite",
          "Description": "The npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-22"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V2Score": 5.8,
              "V3Score": 8.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-32804",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
            "https://errata.almalinux.org/8/ALSA-2021-3666.html",
            "https://github.com/advisories/GHSA-3jfq-g458-7qm9",
            "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4",
            "https://github.com/npm/node-tar/security/advisories/GHSA-3jfq-g458-7qm9",
            "https://linux.oracle.com/cve/CVE-2021-32804.html",
            "https://linux.oracle.com/errata/ELSA-2021-3666.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-32804",
            "https://www.npmjs.com/advisories/1770",
            "https://www.npmjs.com/package/tar",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-08-03T19:15:00Z",
          "LastModifiedDate": "2022-04-25T19:12:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-37701",
          "PkgName": "tar",
          "InstalledVersion": "2.2.2",
          "FixedVersion": "6.1.7, 5.0.8, 4.4.16",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-37701",
          "Ref": "pkg:npm/tar@2.2.2?package-id=a644fd4f575173c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite",
          "Description": "The npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-22",
            "CWE-59"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            },
            "nvd": {
              "V2Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "V2Score": 4.4,
              "V3Score": 8.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-37701",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
            "https://github.com/advisories/GHSA-9r2w-394v-53qc",
            "https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc",
            "https://linux.oracle.com/cve/CVE-2021-37701.html",
            "https://linux.oracle.com/errata/ELSA-2022-0350.html",
            "https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-37701",
            "https://www.debian.org/security/2021/dsa-5008",
            "https://www.npmjs.com/advisories/1779",
            "https://www.npmjs.com/package/tar",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-08-31T17:15:00Z",
          "LastModifiedDate": "2023-01-19T20:11:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-37712",
          "PkgName": "tar",
          "InstalledVersion": "2.2.2",
          "FixedVersion": "6.1.9, 5.0.10, 4.4.18",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-37712",
          "Ref": "pkg:npm/tar@2.2.2?package-id=a644fd4f575173c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite",
          "Description": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-22",
            "CWE-59"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            },
            "nvd": {
              "V2Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "V2Score": 4.4,
              "V3Score": 8.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-37712",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
            "https://github.com/advisories/GHSA-qq89-hq3f-393p",
            "https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b",
            "https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455",
            "https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e",
            "https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p",
            "https://linux.oracle.com/cve/CVE-2021-37712.html",
            "https://linux.oracle.com/errata/ELSA-2022-0350.html",
            "https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-37712",
            "https://www.debian.org/security/2021/dsa-5008",
            "https://www.npmjs.com/advisories/1780",
            "https://www.npmjs.com/package/tar",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-08-31T17:15:00Z",
          "LastModifiedDate": "2023-02-23T02:28:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-37713",
          "PkgName": "tar",
          "InstalledVersion": "2.2.2",
          "FixedVersion": "6.1.9, 5.0.10, 4.4.18",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-37713",
          "Ref": "pkg:npm/tar@2.2.2?package-id=a644fd4f575173c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-tar: Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization",
          "Description": "The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-22"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            },
            "nvd": {
              "V2Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "V2Score": 4.4,
              "V3Score": 8.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-37713",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
            "https://github.com/advisories/GHSA-5955-9wpr-37jh",
            "https://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946",
            "https://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc",
            "https://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598",
            "https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-37713",
            "https://www.npmjs.com/package/tar",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-08-31T17:15:00Z",
          "LastModifiedDate": "2022-04-25T18:40:00Z"
        },
        {
          "VulnerabilityID": "CVE-2017-1001004",
          "PkgName": "typed-function",
          "InstalledVersion": "0.10.5",
          "FixedVersion": "0.10.6",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-1001004",
          "Ref": "pkg:npm/typed-function@0.10.5?package-id=3fb1df3195f71574",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Arbitrary JavaScript Execution in typed-function",
          "Description": "typed-function before 0.10.6 had an arbitrary code execution in the JavaScript engine. Creating a typed function with JavaScript code in the name could result arbitrary execution.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-20"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "V2Score": 6.8,
              "V3Score": 8.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-3qh4-r86r-grvm",
            "https://github.com/josdejong/typed-function/blob/master/HISTORY.md#2017-11-18-version-0106",
            "https://github.com/josdejong/typed-function/commit/6478ef4f2c3f3c2d9f2c820e2db4b4ba3425e6fe",
            "https://github.com/josdejong/typed-function/commit/6478ef4f2c3f3c2d9f2c820e2db4b4ba3425e6fe?diff=split#diff-9e1f22c2954a38db1fdf444dbc74e0a8",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-1001004",
            "https://snyk.io/vuln/SNYK-JS-TYPEDFUNCTION-174139",
            "https://www.npmjs.com/advisories/819"
          ],
          "PublishedDate": "2017-11-27T14:29:00Z",
          "LastModifiedDate": "2019-10-09T23:21:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-3765",
          "PkgName": "validator",
          "InstalledVersion": "10.11.0",
          "FixedVersion": "13.7.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-3765",
          "Ref": "pkg:npm/validator@10.11.0?package-id=2a3b5a357a9e659e",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "validator: Inefficient Regular Expression Complexity in Validator.js",
          "Description": "validator.js is vulnerable to Inefficient Regular Expression Complexity",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 5,
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-3765",
            "https://github.com/advisories/GHSA-qgmg-gppg-76g5",
            "https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1",
            "https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-3765"
          ],
          "PublishedDate": "2021-11-02T07:15:00Z",
          "LastModifiedDate": "2022-07-29T16:39:00Z"
        }
      ]
    }
  ]
}
